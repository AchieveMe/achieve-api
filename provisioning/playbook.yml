---
- hosts: all
  sudo: true
  vars:
    nvm:
      user: 'vagrant'
      version: v0.25.4
      node_version: '0.12'

  tasks:
    - name: MongoDB | Fetch GPG key
      sudo: yes
      command: apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
      tags: mongodb

    - name: MongoDB | Add 10 repository
      sudo: yes
      shell:
        echo "deb http://repo.mongodb.org/apt/ubuntu \"$(lsb_release -sc)\"/mongodb-org/3.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list

    - name: MongoDB | Install latest mongodb
      sudo: yes
      apt: pkg=mongodb-org update-cache=yes
      tags: mongodb

    - name: MongoDB | Run mongo daemon
      sudo: yes
      service: name=mongod state=started
      tags: mongodb

    - name: Node.js | Package prerequisites for node.js
      apt: pkg=python-software-properties state=present
      sudo: yes
      tags: nodejs

    - name: Node.js | Add the Node.js PPA
      apt_repository: repo='ppa:chris-lea/node.js' state=present
      sudo: yes
      tags: nodejs

    - name: Node.js | Install Node.js and npm
      apt: pkg=nodejs update-cache=yes
      sudo: yes
      tags: nodejs

    - name: Install dependencies
      apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - git
        - curl
        - build-essential
        - libssl-dev
      tags: nvm

    - name: Install nvm
      sudo: yes
      sudo_user: "{{ nvm.user }}"
      git: repo=https://github.com/creationix/nvm.git dest=~/.nvm version={{ nvm.version }}
      tags: nvm

    - name: Source nvm in ~/.profile
      sudo: yes
      sudo_user: "{{ nvm.user }}"
      lineinfile: >
        dest=~/.profile
        line="source ~/.nvm/nvm.sh"
      tags: nvm

    - name: Install {{ nvm.node_version }}
      command: sudo -iu {{ nvm.user }} nvm install {{ nvm.node_version }}
      register: nvm_install_result
      changed_when: "'is already installed.' not in nvm_install_result.stdout"
      tags: nvm

    - name: Check if {{ nvm.node_version }} is the default node version
      shell: sudo -iu {{ nvm.user }} nvm ls | grep -e 'default -> {{ nvm.node_version }}'
      register: nvm_check_default
      changed_when: False
      ignore_errors: True
      tags: nvm

    - name: Set default node version to {{ nvm.node_version }}
      command: sudo -iu {{ nvm.user }} nvm alias default {{ nvm.node_version }}
      when: nvm_check_default|failed
      tags: nvm
